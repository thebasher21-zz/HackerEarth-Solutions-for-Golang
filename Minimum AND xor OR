package main
import (
    f "fmt"
    "os"
    b "bufio"
    "sort"
    m "math"
)

func minimum(a []int, N int) (int) {
    min := m.Inf(1)
    var val float64
    for i:=0; i<N-1; i++ {
        val = float64((a[i] & a[i + 1]) ^ (a[i] | a[i + 1]))
        if min > val {
            min = val
        }
    }
    return int(min)
}

func main() {
    var T, N int
    A := make([]int, 100000)
    in := b.NewReader(os.Stdin)
    f.Fscan(in, &T)
    for ; T>0; T-- {
        f.Fscan(in, &N)
        ar := A[:N]
        for i:=0; i<N; i++ {
            f.Fscan(in, &ar[i])
        }
        sort.Ints(ar)
        min := minimum(ar, N)
        f.Println(int(min))
    }
}
